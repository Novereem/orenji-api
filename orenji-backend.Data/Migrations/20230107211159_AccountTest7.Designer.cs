// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using orenji_backend.Data;

namespace orenji_backend.Data.Migrations
{
    [DbContext(typeof(OrenjiContext))]
    [Migration("20230107211159_AccountTest7")]
    partial class AccountTest7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("orenji_backend.Common.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Size")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("orenji_backend.Common.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AccountId1")
                        .HasColumnType("char(36)");

                    b.Property<string>("Company")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AccountId1");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2f9ac33-ed81-428d-b1d5-1e38f61b3931"),
                            Company = "The Cool Company",
                            Name = "Cool Pants",
                            Price = 4.9900000000000002,
                            Type = "Pants"
                        },
                        new
                        {
                            Id = new Guid("a3c4c06c-8a14-4148-984a-b6bc758e1b4a"),
                            Company = "The Quirky Company ",
                            Name = "Quirky Pants",
                            Price = 9.9900000000000002,
                            Type = "Pants"
                        },
                        new
                        {
                            Id = new Guid("c607ab65-f49a-4c29-af32-67b14dab719b"),
                            Company = "The Lax Company ",
                            Name = "Lax Pants",
                            Price = 1.99,
                            Type = "Pants"
                        },
                        new
                        {
                            Id = new Guid("aaa7a7e3-0bb1-40b8-9f47-fe9eb335c1d9"),
                            Company = "The Modest Company",
                            Name = "Modest Shirt",
                            Price = 12.99,
                            Type = "Shirt"
                        },
                        new
                        {
                            Id = new Guid("92ea108c-5b40-4572-885e-f4c4e568e50d"),
                            Company = "The Calm Company",
                            Name = "Calm Shirt",
                            Price = 19.989999999999998,
                            Type = "Shirt"
                        },
                        new
                        {
                            Id = new Guid("7a726a4a-25f3-4cc1-a59a-c704bc864553"),
                            Company = "The Modest Company",
                            Name = "Timid Shirt",
                            Price = 24.989999999999998,
                            Type = "Shirt"
                        },
                        new
                        {
                            Id = new Guid("2570d752-ce8e-45f9-b4d6-e008b375380c"),
                            Company = "The Adamant Company",
                            Name = "Adamant Shirt",
                            Price = 64.989999999999995,
                            Type = "Shirt"
                        },
                        new
                        {
                            Id = new Guid("11421bfa-21b2-4e7d-b52e-340b985d0ae6"),
                            Company = "The Lonely Company",
                            Name = "Lonely Shirt",
                            Price = 14.99,
                            Type = "Shirt"
                        },
                        new
                        {
                            Id = new Guid("5d8b372e-e891-4e17-98c1-304cfa0dbf49"),
                            Company = "The Jolly Company",
                            Name = "Jolly Shirt",
                            Price = 47.990000000000002,
                            Type = "Shirt"
                        },
                        new
                        {
                            Id = new Guid("a93f2720-0f34-410f-b308-12e746f4c508"),
                            Company = "The Brave Company",
                            Name = "Brave Shirt",
                            Price = 34.990000000000002,
                            Type = "Shirt"
                        },
                        new
                        {
                            Id = new Guid("c5228e01-e461-4cf1-82a3-cc296fb87314"),
                            Company = "The Adamant Company",
                            Name = "Adamant Shirt",
                            Price = 12.99,
                            Type = "Shoe"
                        },
                        new
                        {
                            Id = new Guid("cf58376b-fbf4-4c79-b159-92679119c05b"),
                            Company = "The Docile Company",
                            Name = "Docile Shirt",
                            Price = 19.989999999999998,
                            Type = "Shoe"
                        },
                        new
                        {
                            Id = new Guid("7683ae3e-5f3e-40a0-bb66-0ad593d0f89a"),
                            Company = "The Lonely Company",
                            Name = "Lonely Shirt",
                            Price = 24.989999999999998,
                            Type = "Shoe"
                        },
                        new
                        {
                            Id = new Guid("1db091bf-9701-4dce-bfc6-79c7a2703d51"),
                            Company = "The Timid Company",
                            Name = "Timid Shirt",
                            Price = 64.989999999999995,
                            Type = "Shoe"
                        },
                        new
                        {
                            Id = new Guid("3b1b725e-0ce4-4a81-9ac9-15dc4fefaa79"),
                            Company = "The Bold Company",
                            Name = "Bold Shirt",
                            Price = 14.99,
                            Type = "Shoe"
                        });
                });

            modelBuilder.Entity("orenji_backend.Common.Models.ProductInCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("fAccount")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("fProduct")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("ProductInCart");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2cad3fc-06f3-4224-9535-9b8880b68d19"),
                            fAccount = new Guid("af8e83e5-2f26-4da9-abe9-d4723425ab7c"),
                            fProduct = new Guid("c5228e01-e461-4cf1-82a3-cc296fb87314")
                        },
                        new
                        {
                            Id = new Guid("b450557c-67ec-4d7a-98d1-83cefaac7f7b"),
                            fAccount = new Guid("af8e83e5-2f26-4da9-abe9-d4723425ab7c"),
                            fProduct = new Guid("cf58376b-fbf4-4c79-b159-92679119c05b")
                        },
                        new
                        {
                            Id = new Guid("126592de-c80a-4d22-97bc-4aec2f1efe82"),
                            fAccount = new Guid("af8e83e5-2f26-4da9-abe9-d4723425ab7c"),
                            fProduct = new Guid("7683ae3e-5f3e-40a0-bb66-0ad593d0f89a")
                        },
                        new
                        {
                            Id = new Guid("464ab413-4471-4b9b-848a-6d44e478efbc"),
                            fAccount = new Guid("af8e83e5-2f26-4da9-abe9-d4723425ab7c"),
                            fProduct = new Guid("1db091bf-9701-4dce-bfc6-79c7a2703d51")
                        },
                        new
                        {
                            Id = new Guid("1596fe73-0b37-4afb-b11c-0ed66a35e063"),
                            fAccount = new Guid("af8e83e5-2f26-4da9-abe9-d4723425ab7c"),
                            fProduct = new Guid("3b1b725e-0ce4-4a81-9ac9-15dc4fefaa79")
                        });
                });

            modelBuilder.Entity("orenji_backend.Common.Models.Product", b =>
                {
                    b.HasOne("orenji_backend.Common.Models.Account", null)
                        .WithMany("CartProducts")
                        .HasForeignKey("AccountId");

                    b.HasOne("orenji_backend.Common.Models.Account", null)
                        .WithMany("LikedProducts")
                        .HasForeignKey("AccountId1");
                });

            modelBuilder.Entity("orenji_backend.Common.Models.Account", b =>
                {
                    b.Navigation("CartProducts");

                    b.Navigation("LikedProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
